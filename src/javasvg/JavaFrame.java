/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javasvg;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.jfree.graphics2d.svg.SVGGraphics2D;
import org.jfree.graphics2d.svg.SVGUtils;

/**
 *
 * @author winsock
 */
public class JavaFrame extends javax.swing.JFrame {

    String FILE_NAME="/home/winsock/test.svg";
    final static Charset ENCODING = StandardCharsets.UTF_8;
    /**
     * Creates new form JavaFrame
     */
    public JavaFrame() {
        initComponents();
        updateValuesFromPrefs();
       
    }

    private void updateValuesFromPrefs()
    {
        jSliderDepth.setValue(compFractalTree1.getDepth());
        jSliderBranchLength.setValue(compFractalTree1.getBranchLength());
        jSliderBranchAngle.setValue(compFractalTree1.getBranchAngle());
        jSliderTrunkAngle.setValue(compFractalTree1.getTrunkAngle());
        jSliderLeftBranchAngle.setValue(compFractalTree1.getLeftBranchAngle());
        jSliderRightBranchAngle.setValue(compFractalTree1.getRightBranchAngle());
        jCheckBoxBranchLengthRandom.setSelected(compFractalTree1.getBranchLengthRandom());
        jCheckBoxBranchAngleRandom.setSelected(compFractalTree1.getBranchAngleRandom());
        jCheckBoxThickBranches.setSelected(compFractalTree1.getThickBranches());
        jCheckBoxRandomColor.setSelected(compFractalTree1.getRandomColor());
        jCheckBoxBerries.setSelected(compFractalTree1.getBerries());
        jCheckBoxDashes.setSelected(compFractalTree1.getDashes());
        jCheckBoxDeadBranches.setSelected(compFractalTree1.getDeadBranches());
        txtFieldSliderValue.setText("0");
        compFractalTree1.treeColor = Color.WHITE;
        compFractalTree1.rootColor = Color.MAGENTA;
        compFractalTree1.tipColor = Color.yellow;
        compFractalTree1.backgroundColor = Color.BLACK;
        
               
    }
    private void resetValues()
    {
        jSliderDepth.setValue(9);
        jSliderBranchLength.setValue(10);
        jSliderBranchAngle.setValue(20);
        jSliderTrunkAngle.setValue(0);
        jSliderLeftBranchAngle.setValue(0);
        jSliderRightBranchAngle.setValue(0);
        jCheckBoxBranchLengthRandom.setSelected(false);
        jCheckBoxBranchAngleRandom.setSelected(false);
        jCheckBoxThickBranches.setSelected(false);
        compFractalTree1.setBranchAngleRandom(false);
        compFractalTree1.setBranchLengthRandom(false);
        jCheckBoxThickBranches.setSelected(false);
        jCheckBoxBerries.setSelected(false);
        jCheckBoxDashes.setSelected(false);
        jCheckBoxDeadBranches.setSelected(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSliderDepth = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jSliderBranchLength = new javax.swing.JSlider();
        jSliderBranchAngle = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jSliderTrunkAngle = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jSliderLeftBranchAngle = new javax.swing.JSlider();
        jSliderRightBranchAngle = new javax.swing.JSlider();
        jCheckBoxBranchLengthRandom = new javax.swing.JCheckBox();
        jButtonReset = new javax.swing.JButton();
        txtFieldSliderValue = new javax.swing.JTextField();
        jCheckBoxBranchAngleRandom = new javax.swing.JCheckBox();
        buttonTreeColor = new javax.swing.JButton();
        jCheckBoxThickBranches = new javax.swing.JCheckBox();
        buttonTipColor = new javax.swing.JButton();
        buttonBackgroundColor = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jCheckBoxRandomColor = new javax.swing.JCheckBox();
        jSliderRandomColorValue = new javax.swing.JSlider();
        jButtonLineStroke = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButtonBerryColor = new javax.swing.JButton();
        jCheckBoxBerries = new javax.swing.JCheckBox();
        jCheckBoxDashes = new javax.swing.JCheckBox();
        jCheckBoxDeadBranches = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        compFractalTree1 = new javasvg.compFractalTree();
        jspaneStatus = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemSetFilename = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        fileChooser.setDialogTitle("Set Filename");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Controls");

        jLabel2.setText("Fractal Depth");
        jLabel2.setToolTipText("");

        jSliderDepth.setMaximum(20);
        jSliderDepth.setMinimum(1);
        jSliderDepth.setMinorTickSpacing(1);
        jSliderDepth.setPaintLabels(true);
        jSliderDepth.setPaintTicks(true);
        jSliderDepth.setSnapToTicks(true);
        jSliderDepth.setToolTipText("This slider sets the depth of the fractal. \nThe default is 9. The higher you go, the \ndeeper the fractal becomes. If you go to \na high level, you may notice a lag depending\n on the speed and memory of your computer.");
        jSliderDepth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderDepthStateChanged(evt);
            }
        });

        jLabel3.setText("Branch Length");
        jLabel3.setToolTipText("");

        jSliderBranchLength.setMajorTickSpacing(1);
        jSliderBranchLength.setMaximum(20);
        jSliderBranchLength.setPaintTicks(true);
        jSliderBranchLength.setSnapToTicks(true);
        jSliderBranchLength.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderBranchLengthStateChanged(evt);
            }
        });

        jSliderBranchAngle.setMajorTickSpacing(5);
        jSliderBranchAngle.setMaximum(90);
        jSliderBranchAngle.setPaintTicks(true);
        jSliderBranchAngle.setSnapToTicks(true);
        jSliderBranchAngle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderBranchAngleStateChanged(evt);
            }
        });

        jLabel4.setText("Branch Angle");
        jLabel4.setToolTipText("");

        jSliderTrunkAngle.setMajorTickSpacing(5);
        jSliderTrunkAngle.setMaximum(45);
        jSliderTrunkAngle.setMinimum(-45);
        jSliderTrunkAngle.setPaintTicks(true);
        jSliderTrunkAngle.setSnapToTicks(true);
        jSliderTrunkAngle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderTrunkAngleStateChanged(evt);
            }
        });

        jLabel5.setText("Trunk Angle");
        jLabel5.setToolTipText("");

        jSliderLeftBranchAngle.setMajorTickSpacing(5);
        jSliderLeftBranchAngle.setMaximum(20);
        jSliderLeftBranchAngle.setMinimum(-20);
        jSliderLeftBranchAngle.setPaintTicks(true);
        jSliderLeftBranchAngle.setSnapToTicks(true);
        jSliderLeftBranchAngle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderLeftBranchAngleStateChanged(evt);
            }
        });

        jSliderRightBranchAngle.setMajorTickSpacing(5);
        jSliderRightBranchAngle.setMaximum(20);
        jSliderRightBranchAngle.setMinimum(-20);
        jSliderRightBranchAngle.setPaintTicks(true);
        jSliderRightBranchAngle.setSnapToTicks(true);
        jSliderRightBranchAngle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderRightBranchAngleStateChanged(evt);
            }
        });

        jCheckBoxBranchLengthRandom.setToolTipText("Randomize");
        jCheckBoxBranchLengthRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBranchLengthRandomActionPerformed(evt);
            }
        });

        jButtonReset.setText("Reset");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        txtFieldSliderValue.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        txtFieldSliderValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFieldSliderValue.setText("jTextField1");

        jCheckBoxBranchAngleRandom.setToolTipText("Randomize");
        jCheckBoxBranchAngleRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBranchAngleRandomActionPerformed(evt);
            }
        });

        buttonTreeColor.setText("Root Color");
        buttonTreeColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTreeColorActionPerformed(evt);
            }
        });

        jCheckBoxThickBranches.setText("Thick Branches");
        jCheckBoxThickBranches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxThickBranchesActionPerformed(evt);
            }
        });

        buttonTipColor.setText("Tip Color");
        buttonTipColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTipColorActionPerformed(evt);
            }
        });

        buttonBackgroundColor.setText("Background Color");
        buttonBackgroundColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackgroundColorActionPerformed(evt);
            }
        });

        jLabel6.setText("Left Branch Angle");
        jLabel6.setToolTipText("");

        jLabel7.setText("Right Branch Angle");
        jLabel7.setToolTipText("");

        jCheckBoxRandomColor.setText("Randomize Color");
        jCheckBoxRandomColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxRandomColorActionPerformed(evt);
            }
        });

        jSliderRandomColorValue.setMajorTickSpacing(25);
        jSliderRandomColorValue.setMaximum(151);
        jSliderRandomColorValue.setMinimum(1);
        jSliderRandomColorValue.setPaintTicks(true);
        jSliderRandomColorValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderRandomColorValueStateChanged(evt);
            }
        });

        jButtonLineStroke.setText("Line Stroke");
        jButtonLineStroke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLineStrokeActionPerformed(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Slider Value Box");

        jButtonBerryColor.setText("Berry Color");
        jButtonBerryColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBerryColorActionPerformed(evt);
            }
        });

        jCheckBoxBerries.setText("Berries");
        jCheckBoxBerries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBerriesActionPerformed(evt);
            }
        });

        jCheckBoxDashes.setText("Dashed Lines");
        jCheckBoxDashes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDashesActionPerformed(evt);
            }
        });

        jCheckBoxDeadBranches.setText("Dead Branches");
        jCheckBoxDeadBranches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDeadBranchesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSliderDepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSliderBranchLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxBranchLengthRandom))
                            .addComponent(jCheckBoxThickBranches)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonReset))
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jSliderBranchAngle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxBranchAngleRandom))
                            .addComponent(jLabel6)
                            .addComponent(jSliderLeftBranchAngle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jSliderRightBranchAngle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jSliderTrunkAngle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(buttonTreeColor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(buttonBackgroundColor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(4, 4, 4))
                                    .addComponent(buttonTipColor, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonBerryColor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonLineStroke)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxRandomColor)
                            .addComponent(jSliderRandomColorValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxBerries)
                                    .addComponent(jCheckBoxDashes))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addGap(46, 46, 46)
                                .addComponent(txtFieldSliderValue, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCheckBoxDeadBranches))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonReset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderDepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBoxBranchLengthRandom)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderBranchLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderBranchAngle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBoxBranchAngleRandom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderLeftBranchAngle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderRightBranchAngle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderTrunkAngle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxThickBranches)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxBerries)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxDashes))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFieldSliderValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDeadBranches)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonTipColor)
                    .addComponent(jButtonLineStroke))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonTreeColor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonBackgroundColor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonBerryColor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxRandomColor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderRandomColorValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));

        compFractalTree1.setBackground(new java.awt.Color(228, 27, 27));
        compFractalTree1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        compFractalTree1.setForeground(new java.awt.Color(250, 243, 243));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(compFractalTree1, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(compFractalTree1, javax.swing.GroupLayout.DEFAULT_SIZE, 1101, Short.MAX_VALUE))
        );

        jspaneStatus.setViewportView(jTextPane1);

        jMenu1.setText("File");

        jMenuItemSetFilename.setText("Save");
        jMenuItemSetFilename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSetFilenameActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSetFilename);

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jspaneStatus)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jspaneStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSliderDepthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderDepthStateChanged
        int tmpDepth = jSliderDepth.getValue();
        txtFieldSliderValue.setText(Integer.toString(tmpDepth));
        compFractalTree1.setDepth(tmpDepth);        // TODO add your handling code here:
    }//GEN-LAST:event_jSliderDepthStateChanged

    private void jSliderBranchLengthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderBranchLengthStateChanged
        compFractalTree1.setBranchLength(jSliderBranchLength.getValue());
        txtFieldSliderValue.setText(Integer.toString(jSliderBranchLength.getValue()));
    }//GEN-LAST:event_jSliderBranchLengthStateChanged

    private void jSliderBranchAngleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderBranchAngleStateChanged
        compFractalTree1.setBranchAngle(jSliderBranchAngle.getValue());// TODO add your handling code here:
        txtFieldSliderValue.setText(Integer.toString(jSliderBranchAngle.getValue()));
    }//GEN-LAST:event_jSliderBranchAngleStateChanged

    private void jSliderTrunkAngleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderTrunkAngleStateChanged
        compFractalTree1.setTrunkAngle(jSliderTrunkAngle.getValue());// TODO add your handling code here:
        txtFieldSliderValue.setText(Integer.toString(jSliderTrunkAngle.getValue()));
    }//GEN-LAST:event_jSliderTrunkAngleStateChanged

    private void jSliderLeftBranchAngleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderLeftBranchAngleStateChanged
        compFractalTree1.setLeftBranchAngle(jSliderLeftBranchAngle.getValue());// TODO add your handling code here:
        txtFieldSliderValue.setText(Integer.toString(jSliderLeftBranchAngle.getValue()));
    }//GEN-LAST:event_jSliderLeftBranchAngleStateChanged

    private void jSliderRightBranchAngleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderRightBranchAngleStateChanged
        compFractalTree1.setRighBranchAngle(jSliderRightBranchAngle.getValue());// TODO add your handling code here:
        txtFieldSliderValue.setText(Integer.toString(jSliderRightBranchAngle.getValue()));
    }//GEN-LAST:event_jSliderRightBranchAngleStateChanged

    private void jCheckBoxBranchLengthRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBranchLengthRandomActionPerformed
        compFractalTree1.setBranchLengthRandom(jCheckBoxBranchLengthRandom.isSelected());// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxBranchLengthRandomActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
       resetValues(); // TODO add your handling code here:
       compFractalTree1.repaint();
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jCheckBoxBranchAngleRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBranchAngleRandomActionPerformed
        compFractalTree1.setBranchAngleRandom(jCheckBoxBranchAngleRandom.isSelected());// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxBranchAngleRandomActionPerformed

    private void buttonTreeColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTreeColorActionPerformed
        Color newColor = JColorChooser.showDialog(
                     JavaFrame.this,
                     "Choose Color",
                     Color.white);  
        compFractalTree1.rootColor = newColor;
        compFractalTree1.repaint();
    }//GEN-LAST:event_buttonTreeColorActionPerformed

    private void jCheckBoxThickBranchesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxThickBranchesActionPerformed
        compFractalTree1.setThickBranches(jCheckBoxThickBranches.isSelected());
    }//GEN-LAST:event_jCheckBoxThickBranchesActionPerformed

    private void jMenuItemSetFilenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSetFilenameActionPerformed
        int returnVal = fileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            FILE_NAME = file.getAbsolutePath();
            try {
                altWriteSVGFile(FILE_NAME);
            } catch (IOException ex) {
                Logger.getLogger(JavaFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_jMenuItemSetFilenameActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void buttonTipColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTipColorActionPerformed
        Color newColor = JColorChooser.showDialog(
                     JavaFrame.this,
                     "Choose Color",
                     Color.white);  
        compFractalTree1.tipColor = newColor;
        compFractalTree1.repaint();
    }//GEN-LAST:event_buttonTipColorActionPerformed

    private void buttonBackgroundColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackgroundColorActionPerformed
        Color newColor = JColorChooser.showDialog(
                JavaFrame.this,
                "Choose Color",
                Color.white);  
        jPanel2.setBackground(newColor);
    }//GEN-LAST:event_buttonBackgroundColorActionPerformed

    private void jCheckBoxRandomColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxRandomColorActionPerformed
        compFractalTree1.setColorRandom(jCheckBoxRandomColor.isSelected());
             
    }//GEN-LAST:event_jCheckBoxRandomColorActionPerformed

    private void jSliderRandomColorValueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderRandomColorValueStateChanged
        compFractalTree1.setRandomColorValue(jSliderRandomColorValue.getValue());
        txtFieldSliderValue.setText(Integer.toString(jSliderRandomColorValue.getValue()));
    }//GEN-LAST:event_jSliderRandomColorValueStateChanged

    private void jButtonLineStrokeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLineStrokeActionPerformed
        compFractalTree1.lineStroke = getStrokeDialog();
        compFractalTree1.repaint();
    }//GEN-LAST:event_jButtonLineStrokeActionPerformed

    private void jButtonBerryColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBerryColorActionPerformed
        compFractalTree1.berryColor = JColorChooser.showDialog(
                JavaFrame.this,
                "Choose Color",
                Color.white);  
        compFractalTree1.repaint();
    }//GEN-LAST:event_jButtonBerryColorActionPerformed

    private void jCheckBoxBerriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBerriesActionPerformed
        compFractalTree1.setBerries(jCheckBoxBerries.isSelected());        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxBerriesActionPerformed

    private void jCheckBoxDashesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDashesActionPerformed
        compFractalTree1.setDashes(jCheckBoxDashes.isSelected());// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxDashesActionPerformed

    private void jCheckBoxDeadBranchesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDeadBranchesActionPerformed
        compFractalTree1.setDeadBranches(jCheckBoxDeadBranches.isSelected());
    }//GEN-LAST:event_jCheckBoxDeadBranchesActionPerformed
    private BasicStroke getStrokeDialog()
    {

        float aWidth;
        String[] endCaps = {"Butt" , "Round", "Square"};
        String[] joinTypes = {"Bevel", "Miter", "Round"};
        JTextField txtWidth = new JTextField("10");
        JComboBox endCapBox = new JComboBox(endCaps);
        JComboBox joinTypeBox = new JComboBox(joinTypes);
        final JComponent[] inputs = new JComponent[] {
            new JLabel("Width"),
            txtWidth,
            new JLabel("End Caps"),
            endCapBox,
            new JLabel("Join Types"),
            joinTypeBox
        };
        int result = JOptionPane.showConfirmDialog(null, inputs, "Line Stroke Options", JOptionPane.PLAIN_MESSAGE);
        if (result==JOptionPane.OK_OPTION) {
            return new BasicStroke(Float.parseFloat(txtWidth.getText()), endCapBox.getSelectedIndex(), joinTypeBox.getSelectedIndex());
        }
        return new BasicStroke(1.0f);
    }
    
    
    
    
    void writeSVGFile(String fileName) 
    {
        File homedir = new File(System.getProperty("user.home"));
        File fileToWrite = new File(FILE_NAME);
        try( PrintWriter out = new PrintWriter(fileToWrite) ){

            out.println(compFractalTree1.getSVGElement());
            out.close();
            System.out.println("Made it this far");
            
            
        }
        catch (FileNotFoundException ex) {
            Logger.getLogger(JavaFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    void altWriteSVGFile(String fileName) throws IOException
    {
        File homedir = new File(System.getProperty("user.home"));
        File fileToWrite = new File(FILE_NAME);
        SVGUtils.writeToSVG(fileToWrite, compFractalTree1.getSVGElement());
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JavaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JavaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JavaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JavaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JavaFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBackgroundColor;
    private javax.swing.JButton buttonTipColor;
    private javax.swing.JButton buttonTreeColor;
    private javasvg.compFractalTree compFractalTree1;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButtonBerryColor;
    private javax.swing.JButton jButtonLineStroke;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JCheckBox jCheckBoxBerries;
    private javax.swing.JCheckBox jCheckBoxBranchAngleRandom;
    private javax.swing.JCheckBox jCheckBoxBranchLengthRandom;
    private javax.swing.JCheckBox jCheckBoxDashes;
    private javax.swing.JCheckBox jCheckBoxDeadBranches;
    private javax.swing.JCheckBox jCheckBoxRandomColor;
    private javax.swing.JCheckBox jCheckBoxThickBranches;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemSetFilename;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSlider jSliderBranchAngle;
    private javax.swing.JSlider jSliderBranchLength;
    private javax.swing.JSlider jSliderDepth;
    private javax.swing.JSlider jSliderLeftBranchAngle;
    private javax.swing.JSlider jSliderRandomColorValue;
    private javax.swing.JSlider jSliderRightBranchAngle;
    private javax.swing.JSlider jSliderTrunkAngle;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JScrollPane jspaneStatus;
    private javax.swing.JTextField txtFieldSliderValue;
    // End of variables declaration//GEN-END:variables
}
